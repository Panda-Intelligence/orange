{
	"name": "@panda-ai/meet",
	"scripts": {
		"build": "remix build",
		"build:e2ee-worker": "./rust-mls-worker/build.sh",
		"lint": "prettier --check . && eslint --ignore-path .gitignore --cache --cache-location ./node_modules/.cache/eslint --max-warnings=0 .",
		"dev": "remix dev --manual -c \"npm start\"",
		"start": "wrangler dev ./build/index.js ${WRANGLER_ARGS:-}",
		"prebuild": "npm run clean",
		"clean": "del public/build && del build",
		"ci-test": "CI=true run-p typecheck test",
		"remove-sourcemaps": "del public/build/**/*.map",
		"deploy": "npm run ci-test && npm run build -- --sourcemap && npm run remove-sourcemaps && wrangler publish --define __RELEASE__:\\\"$(git rev-parse --short HEAD)\\\" --define __SENTRY_DSN__:\\\"$SENTRY_DSN\\\" ${WRANGLER_ARGS:-}",
		"prettier": "prettier -w .",
		"typecheck": "tsc --noEmit --skipLibCheck",
		"typecheck:watch": "npm run typecheck -- --watch",
		"test": "vitest",
		"test:ci": "vitest --watch false",
		"test:e2e": "playwright test --headed",
		"check": "npm run lint && npm run typecheck && npm run test:ci",
		"db:generate": "drizzle-kit generate",
		"db:migrate:local": "wrangler d1 migrations apply orange-meets-db-development -c wrangler.development.toml --local",
		"db:migrate:development": "wrangler d1 migrations apply orange-meets-db-development -c wrangler.development.toml --remote",
		"db:migrate:staging": "wrangler d1 migrations apply orange-meets-db-staging -c wrangler.staging.toml --remote",
		"db:migrate:production": "wrangler d1 migrations apply orange-meets-db-production -c wrangler.production.toml --remote",
		"db:studio:local": "LOCAL_DB_PATH=$(find .wrangler/state/v3/d1/miniflare-D1DatabaseObject -type f -name '*.sqlite' -print -quit) drizzle-kit studio",
		"db:studio:development": "source .drizzle.env && DB_ID='6b0eceef-c836-4ba7-aac2-fa9b6f702e3b' drizzle-kit studio",
		"db:studio:staging": "source .drizzle.env && DB_ID='e9091e61-7e0a-4719-b9cb-3e1c3e95e9fa' drizzle-kit studio",
		"db:studio:production": "source .drizzle.env && DB_ID='125a3008-0a8a-4ada-a829-7d2eb2ef15bc' drizzle-kit studio"
	},
	"dependencies": {
		"@heroicons/react": "^2.2.0",
		"@mediapipe/selfie_segmentation": "^0.1.1675465747",
		"@radix-ui/react-alert-dialog": "^1.1.14",
		"@radix-ui/react-checkbox": "^1.3.2",
		"@radix-ui/react-dialog": "^1.1.14",
		"@radix-ui/react-dropdown-menu": "^2.1.15",
		"@radix-ui/react-label": "^2.1.7",
		"@radix-ui/react-select": "^2.2.5",
		"@radix-ui/react-slot": "^1.2.3",
		"@radix-ui/react-switch": "^1.2.5",
		"@radix-ui/react-toast": "^1.2.14",
		"@radix-ui/react-tooltip": "^1.2.7",
		"@radix-ui/react-visually-hidden": "^1.2.3",
		"@reactivex/rxjs": "^6.6.7",
		"@remix-run/cloudflare": "2.11.1",
		"@remix-run/react": "2.11.1",
		"@tensorflow-models/body-segmentation": "^1.0.2",
		"@tensorflow/tfjs-backend-webgl": "^4.22.0",
		"@tensorflow/tfjs-core": "^4.22.0",
		"clsx": "^2.1.1",
		"cookie": "^1.0.2",
		"drizzle-orm": "^0.33.0",
		"good-grid": "^1.1.5",
		"nanoid": "^5.1.5",
		"partyserver": "^0.0.57",
		"partysocket": "^1.1.4",
		"partytracks": "^0.0.46",
		"react": "^18.3.1",
		"react-dom": "^18.3.1",
		"react-flip-toolkit": "^7.2.4",
		"react-query": "^3.39.3",
		"react-use": "^17.6.0",
		"rxjs": "^7.8.2",
		"tailwind-merge": "^2.6.0",
		"tiny-invariant": "^1.3.3",
		"webrtc-adapter": "^9.0.3",
		"zod": "^3.25.23"
	},
	"devDependencies": {
		"@cloudflare/vitest-pool-workers": "^0.4.31",
		"@cloudflare/workers-types": "^4.20250523.0",
		"@peculiar/webcrypto": "^1.5.0",
		"@playwright/test": "^1.52.0",
		"@remix-run/dev": "2.11.1",
		"@remix-run/eslint-config": "2.11.1",
		"@types/react": "^18.3.22",
		"@types/react-dom": "^18.3.7",
		"better-sqlite3": "^11.10.0",
		"del-cli": "^5.1.0",
		"drizzle-kit": "^0.24.2",
		"eslint": "^8.57.1",
		"git-format-staged": "^3.1.1",
		"msw": "^2.8.4",
		"npm-run-all": "^4.1.5",
		"prettier": "^3.5.3",
		"prettier-plugin-organize-imports": "^4.1.0",
		"tailwindcss": "^3.4.17",
		"typescript": "^5.8.3",
		"vitest": "1.6.1",
		"wrangler": "^3.114.9"
	},
	"overrides": {
		"esbuild": "^0.23.1",
		"pretty-format": "29.7.0",
		"msw": {
			"typescript": "$typescript"
		}
	},
	"engines": {
		"node": ">=16.13"
	},
	"msw": {
		"workerDirectory": "public"
	}
}